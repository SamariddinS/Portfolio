{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isFunction_1 = require(\"./util/isFunction\");\n\nvar Observer_1 = require(\"./Observer\");\n\nvar Subscription_1 = require(\"./Subscription\");\n\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\n\nvar config_1 = require(\"./config\");\n\nvar hostReportError_1 = require(\"./util/hostReportError\");\n\nvar Subscriber = function (_super) {\n  __extends(Subscriber, _super);\n\n  function Subscriber(destinationOrNext, error, complete) {\n    var _this = _super.call(this) || this;\n\n    _this.syncErrorValue = null;\n    _this.syncErrorThrown = false;\n    _this.syncErrorThrowable = false;\n    _this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        _this.destination = Observer_1.empty;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          _this.destination = Observer_1.empty;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            _this.destination = destinationOrNext;\n            destinationOrNext.add(_this);\n          } else {\n            _this.syncErrorThrowable = true;\n            _this.destination = new SafeSubscriber(_this, destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        _this.syncErrorThrowable = true;\n        _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n        break;\n    }\n\n    return _this;\n  }\n\n  Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return this;\n  };\n\n  Subscriber.create = function (next, error, complete) {\n    var subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  };\n\n  Subscriber.prototype.next = function (value) {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  };\n\n  Subscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._error(err);\n    }\n  };\n\n  Subscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._complete();\n    }\n  };\n\n  Subscriber.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.isStopped = true;\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  Subscriber.prototype._next = function (value) {\n    this.destination.next(value);\n  };\n\n  Subscriber.prototype._error = function (err) {\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  Subscriber.prototype._complete = function () {\n    this.destination.complete();\n    this.unsubscribe();\n  };\n\n  Subscriber.prototype._unsubscribeAndRecycle = function () {\n    var _parentOrParents = this._parentOrParents;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  };\n\n  return Subscriber;\n}(Subscription_1.Subscription);\n\nexports.Subscriber = Subscriber;\n\nvar SafeSubscriber = function (_super) {\n  __extends(SafeSubscriber, _super);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    var _this = _super.call(this) || this;\n\n    _this._parentSubscriber = _parentSubscriber;\n    var next;\n    var context = _this;\n\n    if (isFunction_1.isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== Observer_1.empty) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction_1.isFunction(context.unsubscribe)) {\n          _this.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = _this.unsubscribe.bind(_this);\n      }\n    }\n\n    _this._context = context;\n    _this._next = next;\n    _this._error = error;\n    _this._complete = complete;\n    return _this;\n  }\n\n  SafeSubscriber.prototype.next = function (value) {\n    if (!this.isStopped && this._next) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n      var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n\n        hostReportError_1.hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError_1.hostReportError(err);\n        }\n\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.complete = function () {\n    var _this = this;\n\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._complete) {\n        var wrappedComplete = function wrappedComplete() {\n          return _this._complete.call(_this._context);\n        };\n\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n\n      if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError_1.hostReportError(err);\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n    if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError_1.hostReportError(err);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  SafeSubscriber.prototype._unsubscribe = function () {\n    var _parentSubscriber = this._parentSubscriber;\n    this._context = null;\n    this._parentSubscriber = null;\n\n    _parentSubscriber.unsubscribe();\n  };\n\n  return SafeSubscriber;\n}(Subscriber);\n\nexports.SafeSubscriber = SafeSubscriber;","map":{"version":3,"sources":["D:\\Samariddin\\Partfolio\\Same\\node_modules\\rxjs\\src\\internal\\Subscriber.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}