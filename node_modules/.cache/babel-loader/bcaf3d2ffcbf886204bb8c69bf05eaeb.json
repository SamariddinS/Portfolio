{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Subscriber_1 = require(\"../Subscriber\");\n\nfunction canReportError(observer) {\n  while (observer) {\n    var _a = observer,\n        closed_1 = _a.closed,\n        destination = _a.destination,\n        isStopped = _a.isStopped;\n\n    if (closed_1 || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber_1.Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n\n  return true;\n}\n\nexports.canReportError = canReportError;","map":{"version":3,"sources":["D:\\Samariddin\\Partfolio\\Same\\node_modules\\rxjs\\src\\internal\\util\\canReportError.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AASA,SAAgB,cAAhB,CAA+B,QAA/B,EAAuE;AACrE,SAAO,QAAP,EAAiB;AACT,QAAA,EAAA,GAAA,QAAA;AAAA,QAAE,QAAA,GAAA,EAAA,CAAA,MAAF;AAAA,QAAU,WAAA,GAAA,EAAA,CAAA,WAAV;AAAA,QAAuB,SAAA,GAAA,EAAA,CAAA,SAAvB;;AACN,QAAI,QAAM,IAAI,SAAd,EAAyB;AACvB,aAAO,KAAP;AACD,KAFD,MAEO,IAAI,WAAW,IAAI,WAAW,YAAY,YAAA,CAAA,UAA1C,EAAsD;AAC3D,MAAA,QAAQ,GAAG,WAAX;AACD,KAFM,MAEA;AACL,MAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAZD,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"script"}